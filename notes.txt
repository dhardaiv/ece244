                                                                                                  Welcome to ECE244!
2022-06-04
some fundementals: 
- <iostream>: input/output library for cpp
- namespace: the container for names which allows for the code to flow without conflict from other var in different files
- namespace std: allows for us to not have to write std in statements
- main: the entry point of the program.
- cout is the console output while, cin is the console input. 
- the "<<" is called the stream insertion operators, we use << for cout and >> for cin. 
- endl indicates the end of lin. 

data types: 
- int, char, string, double, float and auto (implemented if one intends on changing multiple vars at once)(using auto w/o delcaring a var will result in compiler error)
--> auto length = 6;
--> auto max = length; //compiler will look at length and registers max as int.

- compiler takes source code, converting it to object code that the machine understands
- linker organizes object code into executable files: 

                                (.cpp/.cxx)           (.o)        (.exe)    
                                source       --->   compiler ---> linker
                                                (Process)

Types of errors (from highest to lowest level):
high    ^ logical error: executable producing undesirable output.
        |
        | run-time error: errors that arise at execution.
        |
        | semantic error: undefined code.
        |
low     | syntax error: improper syntax.# ece244


to compile multiple files at the same time, we can do: 

(GNU C++ Compiler)      (File Name)   (-o tag)      (executable file)
        g++             myProgram.c   -o             myProgram.exe

the -o tag helps us name the output of the source code. 

Classes and Objects: 
- classes are similar to strycts in C
- these classes have avars and function members.
--> class Date {
-->     int year;                       In this code snippet, year, month and day 
-->     int month;                      are objects of class date
-->     int day;                    
-->}
- an object is an instantiated var of a class type, the following line: 
-->                 Date christmas; 
- creates an object of the type date called Christmas
- we may use the dot operator to access members: 
--> christmas.month = 12; //this is an instance of the dot operator in use. 

- encapsulation prevents unintentional alterations to class members. 
- As a result of encapsulation, we declare all class members as private
--> this means that these members are not visible to other classes.


- The following are important details of classes in C++:
        1. if another class tries to access a member of a private class, there will be a compilation error. 
        2. All classes are private by default.
        3. A member function can access all variables of its class, regardless if private/public
- We can also initialize objects through constructors & default memeber initializers.
--> by definition, ac constructor is a function made by the programmer that is automatically invoked upon the creation of an object